//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="SearchDocumentsServiceSoap", Namespace="http://capitaliq.com/ciqdotnet/filings/SearchDocuments")]
public partial class SearchDocumentsService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback SearchDocumentsOperationCompleted;
    
    /// <remarks/>
    public SearchDocumentsService() {
        this.Url = "https://api.capitaliq.com/CIQDotNet/api/1.0/SearchDocuments.asmx";
    }
    
    /// <remarks/>
    public event SearchDocumentsCompletedEventHandler SearchDocumentsCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://capitaliq.com/ciqdotnet/filings/SearchDocuments/SearchDocuments", RequestNamespace="http://capitaliq.com/ciqdotnet/filings/SearchDocuments", ResponseNamespace="http://capitaliq.com/ciqdotnet/filings/SearchDocuments", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public DocumentInfo[] SearchDocuments(int[] CompanyId, string[] CompanyName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> FilingStartDateUTC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> FilingEndDateUTC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> ProcessedStartDateUTC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> ProcessedEndDateUTC, int[] SourceId, int[] FormTypeId, int[] FormGroupId, string KeywordText) {
        object[] results = this.Invoke("SearchDocuments", new object[] {
                    CompanyId,
                    CompanyName,
                    FilingStartDateUTC,
                    FilingEndDateUTC,
                    ProcessedStartDateUTC,
                    ProcessedEndDateUTC,
                    SourceId,
                    FormTypeId,
                    FormGroupId,
                    KeywordText});
        return ((DocumentInfo[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSearchDocuments(int[] CompanyId, string[] CompanyName, System.Nullable<System.DateTime> FilingStartDateUTC, System.Nullable<System.DateTime> FilingEndDateUTC, System.Nullable<System.DateTime> ProcessedStartDateUTC, System.Nullable<System.DateTime> ProcessedEndDateUTC, int[] SourceId, int[] FormTypeId, int[] FormGroupId, string KeywordText, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SearchDocuments", new object[] {
                    CompanyId,
                    CompanyName,
                    FilingStartDateUTC,
                    FilingEndDateUTC,
                    ProcessedStartDateUTC,
                    ProcessedEndDateUTC,
                    SourceId,
                    FormTypeId,
                    FormGroupId,
                    KeywordText}, callback, asyncState);
    }
    
    /// <remarks/>
    public DocumentInfo[] EndSearchDocuments(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((DocumentInfo[])(results[0]));
    }
    
    /// <remarks/>
    public void SearchDocumentsAsync(int[] CompanyId, string[] CompanyName, System.Nullable<System.DateTime> FilingStartDateUTC, System.Nullable<System.DateTime> FilingEndDateUTC, System.Nullable<System.DateTime> ProcessedStartDateUTC, System.Nullable<System.DateTime> ProcessedEndDateUTC, int[] SourceId, int[] FormTypeId, int[] FormGroupId, string KeywordText) {
        this.SearchDocumentsAsync(CompanyId, CompanyName, FilingStartDateUTC, FilingEndDateUTC, ProcessedStartDateUTC, ProcessedEndDateUTC, SourceId, FormTypeId, FormGroupId, KeywordText, null);
    }
    
    /// <remarks/>
    public void SearchDocumentsAsync(int[] CompanyId, string[] CompanyName, System.Nullable<System.DateTime> FilingStartDateUTC, System.Nullable<System.DateTime> FilingEndDateUTC, System.Nullable<System.DateTime> ProcessedStartDateUTC, System.Nullable<System.DateTime> ProcessedEndDateUTC, int[] SourceId, int[] FormTypeId, int[] FormGroupId, string KeywordText, object userState) {
        if ((this.SearchDocumentsOperationCompleted == null)) {
            this.SearchDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchDocumentsOperationCompleted);
        }
        this.InvokeAsync("SearchDocuments", new object[] {
                    CompanyId,
                    CompanyName,
                    FilingStartDateUTC,
                    FilingEndDateUTC,
                    ProcessedStartDateUTC,
                    ProcessedEndDateUTC,
                    SourceId,
                    FormTypeId,
                    FormGroupId,
                    KeywordText}, this.SearchDocumentsOperationCompleted, userState);
    }
    
    private void OnSearchDocumentsOperationCompleted(object arg) {
        if ((this.SearchDocumentsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SearchDocumentsCompleted(this, new SearchDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://capitaliq.com/ciqdotnet/filings/SearchDocuments")]
public partial class DocumentInfo {
    
    private FilingEntity[] companiesField;
    
    private FilingEntity[] reportingOwnersField;
    
    private int versionIdField;
    
    private int documentIdField;
    
    private string supplierDocumentIdField;
    
    private int formTypeIdField;
    
    private string descriptionField;
    
    private System.DateTime filedDateField;
    
    private System.Nullable<System.DateTime> periodEndDateField;
    
    private DocumentOutputType[] versionFormatTypeIdsField;
    
    private int fileSizeInBytesField;
    
    private int sourceIdField;
    
    /// <remarks/>
    public FilingEntity[] Companies {
        get {
            return this.companiesField;
        }
        set {
            this.companiesField = value;
        }
    }
    
    /// <remarks/>
    public FilingEntity[] ReportingOwners {
        get {
            return this.reportingOwnersField;
        }
        set {
            this.reportingOwnersField = value;
        }
    }
    
    /// <remarks/>
    public int VersionId {
        get {
            return this.versionIdField;
        }
        set {
            this.versionIdField = value;
        }
    }
    
    /// <remarks/>
    public int DocumentId {
        get {
            return this.documentIdField;
        }
        set {
            this.documentIdField = value;
        }
    }
    
    /// <remarks/>
    public string SupplierDocumentId {
        get {
            return this.supplierDocumentIdField;
        }
        set {
            this.supplierDocumentIdField = value;
        }
    }
    
    /// <remarks/>
    public int FormTypeId {
        get {
            return this.formTypeIdField;
        }
        set {
            this.formTypeIdField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime FiledDate {
        get {
            return this.filedDateField;
        }
        set {
            this.filedDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> PeriodEndDate {
        get {
            return this.periodEndDateField;
        }
        set {
            this.periodEndDateField = value;
        }
    }
    
    /// <remarks/>
    public DocumentOutputType[] VersionFormatTypeIds {
        get {
            return this.versionFormatTypeIdsField;
        }
        set {
            this.versionFormatTypeIdsField = value;
        }
    }
    
    /// <remarks/>
    public int FileSizeInBytes {
        get {
            return this.fileSizeInBytesField;
        }
        set {
            this.fileSizeInBytesField = value;
        }
    }
    
    /// <remarks/>
    public int SourceId {
        get {
            return this.sourceIdField;
        }
        set {
            this.sourceIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://capitaliq.com/ciqdotnet/filings/SearchDocuments")]
public partial class FilingEntity {
    
    private string fullNameField;
    
    private System.Nullable<int> objectIDField;
    
    private ReportingOwnerType ownerTypeField;
    
    /// <remarks/>
    public string FullName {
        get {
            return this.fullNameField;
        }
        set {
            this.fullNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<int> ObjectID {
        get {
            return this.objectIDField;
        }
        set {
            this.objectIDField = value;
        }
    }
    
    /// <remarks/>
    public ReportingOwnerType OwnerType {
        get {
            return this.ownerTypeField;
        }
        set {
            this.ownerTypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://capitaliq.com/ciqdotnet/filings/SearchDocuments")]
public enum ReportingOwnerType {
    
    /// <remarks/>
    Unknown,
    
    /// <remarks/>
    Person,
    
    /// <remarks/>
    Company,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://capitaliq.com/ciqdotnet/filings/SearchDocuments")]
public enum DocumentOutputType {
    
    /// <remarks/>
    html,
    
    /// <remarks/>
    xls,
    
    /// <remarks/>
    doc,
    
    /// <remarks/>
    pdf,
    
    /// <remarks/>
    raw,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void SearchDocumentsCompletedEventHandler(object sender, SearchDocumentsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SearchDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SearchDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public DocumentInfo[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((DocumentInfo[])(this.results[0]));
        }
    }
}
